base-chart:
  nameOverride: {{name}}
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  service:
    type: ClusterIP
    ports: {{^ports}}[]{{/ports}}
  {{#ports}}
      - port: {{port}}
        targetPort: {{port}}
        name: {{{name}}}
        {{#protocol}}
        protocol: {{protocol}}
        {{/protocol}}
  {{/ports}}

  ingresses: {{^ingresses}}[]{{/ingresses}}
    {{#ingresses}}
    - name: {{name}}
      # disabled: true
      annotations:
        spec.ingressClassName: nginx
        cert-manager.io/issuer: letsencrypt-staging
        cert-manager.io/issuer-kind: ClusterIssuer
      spec:
        ingressClassName: nginx
        tls:
          - hosts:
              - {{host}}
            secretName: {{{name}}}-certsecret
        rules:
          {{#rules}}
          - path: '/'
            serviceName: {{{name}}}
            servicePort: {{port}}
            host: {{host}}
            pathType: Prefix
          {{/rules}}
    {{/ingresses}}

  statefulset:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumes:
      - name: appdata
        nfs: 
          server: 192.168.1.10
          path: /appdata
    sharedEnv: {{^defaultEnv}}[]{{/defaultEnv}}
      {{#defaultEnv}}
      - name: {{name}}
        value: {{{value}}}
      {{/defaultEnv}}
    sharedValues:
      imagePullPolicy: IfNotPresent
      securityContext: {}
      resources: {}
    spec:
      imagePullSecrets: []
      nodeSelector: {}
      tolerations: []
      affinity: {}
    containers: {{^containers}}[]{{/containers}}
  {{#containers}}
      - name: {{{name}}}
        image: {{{image}}}
        env: {{^env}}[]{{/env}}
          {{#env}}
          - name: {{{name}}}
            value: {{{value}}}
          {{/env}}
        ports: {{^ports}}[]{{/ports}}
          {{#ports}}
          - containerPort: {{port}}
            name: {{{name}}}
            {{^protocol}}
            protocol: TCP
            {{/protocol}}
            {{#protocol}}
            protocol: {{protocol}}
            {{/protocol}}
          {{/ports}}
        volumeMounts: {{^volumeMounts}}[]{{/volumeMounts}}
          {{#volumeMounts}}
          - mountPath: {{{mountPath}}}
            name: {{{name}}}
            subPath: {{{subPath}}}
          {{/volumeMounts}} 
  {{/containers}}
    volumeClaimTemplates: {{^volumeClaimTemplates}}[]{{/volumeClaimTemplates}}
  {{#volumeClaimTemplates}}
      - volumeClaimTemplate:
          metadata:
            name: {{volumeClaimTemplate.metadata.name}}
          spec:
            storageClassName: {{volumeClaimTemplate.spec.storageClassName}}
            accessModes: 
              - {{volumeClaimTemplate.spec.accessModes}}
            resources:
              requests:
                storage: {{volumeClaimTemplate.spec.resources.requests.storage}}
        volumeMount:
          mountPath: {{{volumeMount.mountPath}}}
  {{/volumeClaimTemplates}}

  static_volumes: []